<?php

/**
 *
 * bareos-webui - Bareos Web-Frontend
 *
 * @link      https://github.com/bareos/bareos-webui for the canonical source repository
 * @copyright Copyright (c) 2013-2016 Bareos GmbH & Co. KG (http://www.bareos.org/)
 * @license   GNU Affero General Public License (http://www.gnu.org/licenses/)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

$title = _('Storage details');
$this->headTitle($title);

?>

<ul class="nav nav-tabs">
   <li class="active"><a href="<?php echo $this->url('storage', array('action'=>'index')); ?>"><?php echo $this->translate('Devices'); ?></a></li>
   <li><a href="<?php echo $this->url('pool', array('action'=>'index')); ?>"><?php echo $this->translate('Pools'); ?></a></li>
   <li><a href="<?php echo $this->url('media', array('action'=>'index')); ?>"><?php echo $this->translate('Volumes'); ?></a></li>
</ul>

<br />

<?php if($this->acl_alert) : echo $this->ACLAlert($this->required_commands); elseif(!$this->acl_alert) : ?>

<div class="row">

<!-- modal-001 start -->
<div id="modal-001" class="modal fade modal-001" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
         </button>
         <h4 class="modal-title" id="myModalLabel"><?php echo $this->translate("Director message"); ?></h4>
      </div>
      <div class="modal-body" style="height: 250px; overflow-y: scroll">
         <p><?php echo str_replace(array("\n","\r"), "<br />", $this->result); ?></p>
      </div>
      <div class="modal-footer">
         <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $this->translate("Close"); ?></button>
      </div>
    </div>
  </div>
</div>
<!-- modal-001 end -->

<!-- modal-002 start -->
<div id="modal-002" class="modal fade modal-002" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
         </button>
         <h4 class="modal-title" id="myModalLabel"><?php echo $this->translate("Label barcodes"); ?></h4>
      </div>
      <div class="modal-body">
         <?php
            $form->prepare();
            $form->setAttribute('class','form-horizontal');
            $form->setAttribute('action', $this->url('storage', array('action' => 'details', 'id' => $this->storagename), array('query' => array('action'=> 'label'))));
            echo $this->form()->openTag($form);
            echo $this->formRow($form->get('storage'));
            echo $this->formRow($form->get('pool'));
            echo '<p class="help-block">'.$this->translate("Assign media to this pool.").'</p>';
            echo $this->formRow($form->get('drive'));
            echo '<p class="help-block">'.$this->translate("Use this drive for labeling.").'</p>';
         ?>
      </div>
      <div class="modal-footer">
         <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $this->translate("Cancel"); ?></button>
         <?php
            echo $this->formSubmit($form->get('submit')->setAttribute('class','btn btn-primary'));
            echo $this->form()->closeTag($form);
         ?>
      </div>
    </div>
  </div>
</div>
<!-- modal-002 end -->

<div class="col-xs-6 col-md-4">

   <div class="panel panel-default">
      <div class="panel-heading">
         <h3 class="panel-title"><?php echo $this->translate("Import/Export Slots"); ?> - <?php echo $this->storagename; ?></h3>
      </div>
      <div class="panel-body" style="overflow-y: auto;">
         <table class="table table-hover" id="storage-ie-slots">
            <thead class="bg-primary">
               <th><?php echo $this->translate("Slot"); ?></th>
               <th><?php echo $this->translate("Volume"); ?></th>
               <th></th>
               <th><?php echo $this->translate("Actions"); ?></th>
            </thead>
            <tbody class="table table-bordered">
            </tbody>
         </table>
      </div>
   </div>

   <div class="panel panel-default">
      <div class="panel-heading">
         <h3 class="panel-title"><?php echo $this->translate("Drives"); ?> - <?php echo $this->storagename; ?></h3>
      </div>
      <div class="panel-body" style="overflow-y: auto;">
         <table class="table table-hover" id="storage-drives">
            <thead class="bg-primary">
               <th><?php echo $this->translate("Drive"); ?></th>
               <th><?php echo $this->translate("Loaded"); ?></th>
               <th><?php echo $this->translate("Volume"); ?></th>
               <th></th>
               <th><?php echo $this->translate("Actions"); ?></th>
            </thead>
            <tbody class="table table-bordered">
            </tbody>
         </table>
      </div>
   </div>

</div>

<div class="col-xs-12 col-md-8">

   <div class="panel panel-default">
      <div class="panel-heading">
         <h3 class="panel-title"><?php echo $this->translate("Slots"); ?> - <?php echo $this->storagename; ?></h3>
      </div>
      <div class="panel-body" style="overflow-y: auto;">
         <table class="table table-hover" id="storage-slots">
            <thead class="bg-primary">
               <th><?php echo $this->translate("Slot"); ?></th>
               <th><?php echo $this->translate("Volume"); ?></th>
               <th><?php echo $this->translate("Bytes"); ?></th>
               <th><?php echo $this->translate("Last written"); ?></th>
               <th><?php echo $this->translate("Expiration"); ?></th>
               <th><?php echo $this->translate("Status"); ?></th>
               <th><?php echo $this->translate("Media Type"); ?></th>
               <th><?php echo $this->translate("Pool"); ?></th>
               <th></th>
               <th></th>
               <th><?php echo $this->translate("Actions"); ?></th>
            </thead>
            <tbody class="table table-bordered">
            </tbody>
         </table>
      </div>
   </div>

</div>

<?php
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.plugins.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.functions.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/dataTables.buttons.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/moment.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/moment-with-locales.min.js');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/buttons.dataTables.min.css');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/datatables.min.css');
?>

<script>

$.fn.DataTable.ext.search.push(
   function( settings, aData, iDataIndex ) {
      if(settings.nTable.id === 'storage-slots') {
         return (aData[9] === 'slot') ? true : false;
      }

      if(settings.nTable.id === 'storage-drives') {
         return (aData[3] === 'drive') ? true : false;
      }

      if(settings.nTable.id === 'storage-ie-slots') {
         return (aData[2] === 'import_slot') ? true : false;
      }

      return false;
   }
);

$(document).ready(function() {

   setDtTextDomain('<?php echo $this->basePath() . '/js/locale'; ?>');
   setDtLocale('<?php echo $_SESSION['bareos']['locale']; ?>');

   var result = '<?php echo str_replace(array("\n","\r"), "", $this->result); ?>';

   if(result.length > 0) {
      $("#modal-001").modal();
   }

   var normal_slots = $('#storage-slots').DataTable( {
      "dom": "<'row'<'col-md-2'l><'col-md-10'f>><'row'<'col-md-12'B>>rtip",
      "ajax": {
         "url": "<?php echo $this->url('storage', array('action' => 'getData'), null) . '?data=statusslots&storage=' . $this->storagename; ?>",
         "dataSrc": ""
      },
      "language": {
         "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
      },
      "responsive": true,
      "paging": true,
      "pagingType": "full_numbers",
      "lengthMenu": [ <?php echo $_SESSION['bareos']['dt_lengthmenu']; ?> ],
      "pageLength": <?php echo $_SESSION['bareos']['dt_pagelength']; ?>,
      "stateSave": <?php echo $_SESSION['bareos']['dt_statesave']; ?>,
      "ordering": true,
      "order": [[0, "asc"]],
      "searching": true,
      "info": false,
      "columns": [
         { "data": "slotnr", "defaultContent": "" },
         { "data": null, "defaultContent": "" },
         { "type": "file-size", "data": "mr_volbytes", "defaultContent": "" },
         { "data": "mr_lastwritten", "defaultContent": "0" },
         { "data": null, "defaultContent": "" },
         { "data": "mr_volstatus", "defaultContent": "" },
         { "data": "mr_mediatype", "defaultContent": "" },
         { "data": "pr_name", "defaultContent": "" },
         { "data": "mr_volbytes", "defaultContent": "0.00 B", "visible": false },
         { "data": "type", "defaultContent": "unknown", "visible": false },
         { "data": null, "defaultContent": "", "orderable": false }
      ],
      "columnDefs": [
         {
            "targets": 1,
            "render": function(data, type, full, meta) {
               if(data != null) {
                  if(data.mr_volstatus != null) {
                     if(data.mr_volstatus != '?') {
                        return '<a href="<?php echo $this->basePath() . '/media/details/'; ?>'+ data.mr_volname +'">'+ data.mr_volname +'</a>';
                     }
                     else {
                        return data.mr_volname;
                     }
                  }
               }
            }
         },
         {
            "targets": 2,
            "orderData": 8,
            "render": function(data, type, full, meta) {
               if(data == '?') {
                  return '';
               }
               else if(data != null) {
                  return formatBytes(data);
               }
            }
         },
         {
            "targets": 3,
            "render": function(data, type, full, meta) {
               if(data == "" || data == 0 || data == null) {
                  return '';
               }
               else {
                  var f = moment.unix(data).format("YYYY-MM-DD HH:mm:ss");
                  return f;
               }
            }
         },
         {
            "targets": 4,
            "render": function(data, type, full, meta) {
               if(data.mr_volstatus != "Append") {
                  if(data.mr_expire > data.mr_lastwritten && data.mr_lastwritten > 0) {
                     var i = moment.unix(data.mr_expire).format("YYYY-MM-DD HH:mm:ss");
                     return i;
                  }
               }

               return '';
            }
         },
         {
            "targets": 5,
            "render": function(data, type, full, meta) {
               if(data == '?') {
                  return '<span class="label label-warning"><?php echo $this->translate("not in catalog"); ?></span>';
               }
               else {
                  return data;
               }
            }
         },
         {
            "targets": 6,
            "render": function(data, type, full, meta) {
               if(data == '?') {
                  return '';
               }
               else {
                  return data;
               }
            }
         },
         {
            "targets": 7,
            "render": function(data, type, full, meta) {
               if(data == '?') {
                  return '';
               }
               else if(data != null) {
                  return '<a href="<?php echo $this->basePath() . '/pool/details/'; ?>'+data+'">'+data+'</a>';
               }
            }
         },
         {
            "targets": 10,
            "render": function(data, type, full, meta) {
               if(data.content == "empty") {
                  return '';
               }
               else {
                  return '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath() . '/storage/details/' . $this->storagename . '?action=export&storage=' . $this->storagename . '&srcslots='; ?>' + data.slotnr + '" title="<?php echo $this->translate("Export"); ?>" id="btn-1"><span class="glyphicon glyphicon-export"></span></a>';
               }
            }
         }
      ],
      "buttons": [
         {
            "text": '<span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>' + ' <?php echo $this->translate("Update slots"); ?>',
            "action": function(e, dt, node, conf) {
               window.location.assign('<?php echo $this->basePath() . "/storage/details/" . $this->storagename . "?action=updateslots&storage=" . $this->storagename; ?>');
            }
         },
         {
            "text": '<div data-toggle="modal" data-target="#modal-002"><span class="glyphicon glyphicon-barcode" aria-hidden="true"></span>' + ' <?php echo $this->translate("Label barcodes"); ?></div>',
            "action": function(e, dt, node, conf) {
               // empty as data-target #modal-002 is called above
            }
         }
      ]
   });

   var drive_slots = $('#storage-drives').DataTable( {
      "dom": "l<'row'<'col-sm-6'B>>rtip",
      "ajax": {
         "url": "<?php echo $this->url('storage', array('action' => 'getData'), null) . '?data=statusslots&storage=' . $this->storagename; ?>",
         "dataSrc": ""
      },
      "language": {
         "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
      },
      "responsive": true,
      "paging": false,
      "ordering": false,
      "order": [[0, "asc"]],
      "info": false,
      "searching": true,
      "columns": [
         { "data": "slotnr", "defaultContent": "" },
         { "data": "loaded", "defaultContent": "" },
         { "data": "volname", "defaultContent": "" },
         { "data": "type", "defaultContent": "unknown", "visible": false },
         { "data": null, "defaultContent": "" }
      ],
      "columnDefs": [
         {
            "targets": 2,
            "render": function(data, type, full, meta) {
               if(data != null) {
                  return '<a href="<?php echo $this->basePath() . '/media/details/'; ?>'+data+'">'+data+'</a>';
               }
            }
         },
         {
            "targets": 4,
            "render": function(data, type, full, meta) {
               if(data.content == "empty") {
                  return '';
               }
               else {
                  return '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath() . '/storage/details/' . $this->storagename . '?action=release&storage=' . $this->storagename . '&srcslots='; ?>' + data.slotnr + '" title="<?php echo $this->translate("Release"); ?>" id="btn-1"><span class="glyphicon glyphicon-eject"></span></a>';
               }
            }
         }
      ],
      "buttons": [
      ]
   });

   var impexp_slots = $('#storage-ie-slots').DataTable( {
      "dom": "l<'row'<'col-sm-6'B>>rtip",
      "ajax": {
         "url": "<?php echo $this->url('storage', array('action' => 'getData'), null) . '?data=statusslots&storage=' . $this->storagename; ?>",
         "dataSrc": ""
      },
      "language": {
         "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
      },
      "responsive": true,
      "paging": false,
      "ordering": false,
      "order": [[0, "asc"]],
      "info": false,
      "searching": true,
      "columns": [
         { "data": "slotnr", "defaultContent": "" },
         { "data": null, "defaultContent": "" },
         { "data": "type", "defaultContent": "", "visible": false },
         { "data": null, "defaultContent": "" }
      ],
      "columnDefs": [
         {
            "targets": 1,
            "render": function(data, type, full, meta) {
               if(data != null) {
                  if(data.mr_volstatus != null) {
                     if(data.mr_volstatus != '?') {
                        return '<a href="<?php echo $this->basePath() . '/media/details/'; ?>'+ data.mr_volname +'">'+ data.mr_volname +'</a>';
                     }
                     else {
                        return data.mr_volname;
                     }
                  }
               }
            }
         },
         {
            "targets": 3,
            "render": function(data, type, full, meta) {
               if(data.content == "empty") {
                  return '';
               }
               else {
                  return '<span id="import-action"><a class="btn btn-default btn-xs" id="btn-1" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath() . '/storage/details/' . $this->storagename . '?action=import&storage=' . $this->storagename . '&srcslots='; ?>' + data.slotnr + '" title="<?php echo $this->translate("Import"); ?>" id="btn-1"><span class="glyphicon glyphicon-import"></span></a></span>';
               }
            }
         }
      ],
      "buttons": [
         {
            "text": '<span class="glyphicon glyphicon-import" aria-hidden="true"></span>' + ' <?php echo $this->translate("Import all"); ?>',
            "action": function(e, dt, node, conf) {
               $('#spinner').fadeIn('normal');
               window.location.assign('<?php echo $this->basePath() . "/storage/details/" . $this->storagename . "?action=import&storage=" . $this->storagename; ?>');
            }
         },
      ],
   });

   $('#storage-ie-slots tbody').on('mouseover', '#btn-1', function () {
      $('[data-toggle="tooltip"]').tooltip();
   });

   $('#storage-drives tbody').on('mouseover', '#btn-1', function () {
      $('[data-toggle="tooltip"]').tooltip();
   });

   $('#storage-slots tbody').on('mouseover', '#btn-1', function () {
      $('[data-toggle="tooltip"]').tooltip();
   });

   $('#storage-ie-slots tbody').on('click', '#btn-1', function() {
      $('#spinner').fadeTo('normal', 0.50);
   });

   $('#storage-drives tbody').on('click', '#btn-1', function() {
      $('#spinner').fadeTo('normal', 0.50);
   });

   $('#storage-slots tbody').on('click', '#btn-1', function() {
      $('#spinner').fadeTo('normal', 0.50);
   });

});

</script>

<?php endif; ?>
