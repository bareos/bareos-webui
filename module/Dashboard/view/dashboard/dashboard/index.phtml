<?php

/**
 *
 * bareos-webui - Bareos Web-Frontend
 *
 * @link      https://github.com/bareos/bareos-webui for the canonical source repository
 * @copyright Copyright (c) 2013-2016 Bareos GmbH & Co. KG (http://www.bareos.org/)
 * @license   GNU Affero General Public License (http://www.gnu.org/licenses/)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

$title = _('Dashboard');
$this->headTitle($title);

?>

<?php if($this->acl_alert) : echo $this->ACLAlert($this->required_commands); elseif(!$this->acl_alert) : ?>

<div class="row">

   <div class="col-md-4">
      <?php echo $this->partial('JobsPast24h'); ?>
      <?php echo $this->partial('CurrentJobStatus'); ?>
      <?php echo $this->partial('LastDirectorMessages'); ?>
   </div>

   <div class="col-md-8">
      <?php echo $this->partial('JobsLastStatus'); ?>
   </div>

</div>

<?php
   echo $this->headScript()->prependFile($this->basePath() . '/js/jqplot.pointLabels.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/jqplot.categoryAxisRenderer.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/jqplot.barRenderer.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/jqplot.pieRenderer.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/jquery.jqplot.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/bareos.formatters.js');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/jquery.jqplot.min.css');

   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.plugins.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.functions.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.min.js');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/datatables.min.css');
?>

<script type="text/javascript">

   function chart1() {

      var data = [
         ['<?php echo $this->translate('Running'); ?>', <?php echo $this->runningJobs; ?>],
         ['<?php echo $this->translate('Waiting'); ?>', <?php echo $this->waitingJobs; ?>],
         ['<?php echo $this->translate('Terminated successfully'); ?>', <?php echo $this->successfulJobs; ?>],
         ['<?php echo $this->translate('Terminated unsuccessfully'); ?>', <?php echo $this->unsuccessfulJobs; ?>]
      ];

      var plot1 = jQuery.jqplot(
         'chart1',
         [data],
         {
            seriesColors: [ "#5bc0de", "#cccccc", "#5cb85c", "#d9534f" ],
            seriesDefaults: {
               renderer: jQuery.jqplot.PieRenderer,
               rendererOptions: {
                  fill: true,
                  showDataLabels: true,
               },
               shadow: false,
            },
            legend:{
               show: true,
               location: 'se',
            },
            grid: {
               background: '#ffffff',
               drawGridLines: false,
               drawBorder: false,
               borderColor: 'transparent',
               shadowColor: 'transparent',
            }
         }
      );

   }

   var lastlogid = 0;

   function getDirectorMessages() {
      $.ajax({
         url : '<?php echo $this->url('dashboard', array('action' => 'getData'), null) . '?data=dirdmsg'; ?>',
         dataType: 'json',
         timeout: 10000,
         success: function(data) {
            for(var i in data) {
               if(data[i].logid > lastlogid) {
                  var msg = $('<div class="msg" id="'+data[i].logid+'"><strong>'+data[i].time+'</strong>&nbsp;'+data[i].logtext+'</div>');
                  msg.insertBefore('#'+lastlogid).fadeIn('slow');
                  lastlogid = data[i].logid;
               }
            }
         }
      });
   }

   function getCurrentRunningJob() {
	  
      $.ajax({
         url : '<?php echo $this->url('dashboard', array('action' => 'getData'), null) . '?data=jobsrunning'; ?>',
         dataType: 'json',
         timeout: 10000,
         success: function(data) {
            if (Object.keys(data).length >= 1) {
               $(Object.keys(data)).each(function(key, jobId) {
                  $('.running-job-container').html(
                     $('<dl>').addClass('dl-horizontal').append(
                        $('<dt>').html('<?php echo $this->translate('Client'); ?>'),
                        $('<dd>').html(data[jobId].client),
                        $('<dt>').html('<?php echo $this->translate('Type'); ?>'),
                        $('<dd>').html(data[jobId].type),
                        $('<dt>').html('<?php echo $this->translate('Files processed'); ?>'),
                        $('<dd>').html(data[jobId].files),
                        $('<dt>').html('<?php echo $this->translate('Bytes processed'); ?>'),
                        $('<dd>').html(formatBytesExt(data[jobId].bytes)),
                        $('<dt>').html('<?php echo $this->translate('Avg Speed'); ?>'),
                        $('<dd>').html(formatBytesExt(data[jobId].avgbytes_sec, true) + '/s'),
                        $('<dt>').html('<?php echo $this->translate('Speed'); ?>'),
                        $('<dd>').html(formatBytesExt(data[jobId].lastbytes_sec, true) + '/s'),
                        $('<hr>')
                     ) 
                  );
               });
            } else {
                $('.running-job-container').html('<?php echo $this->translate('No jobs running.'); ?>');
            }   
         }
      });
   }
   
   $(document).ready(
      function() {
         setDtTextDomain('<?php echo $this->basePath() . '/js/locale'; ?>');
         setDtLocale('<?php echo $_SESSION['bareos']['locale']; ?>');

         chart1();

         getDirectorMessages();
         getCurrentRunningJob();
         
         setInterval('getDirectorMessages()', 30000);
         setInterval('getCurrentRunningJob()', 5000);

         var table_jobs_last_status = $('#jobs-last-status').DataTable({
            "ajax": {
               "url": "<?php echo $this->url('dashboard', array('action' => 'getData'), null) . '?data=jobslaststatus'; ?>",
               "dataSrc": ""
            },
            "language": {
               "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
            },
            "columns" : [
               { "data": "name" },
               { "data": "jobstatus" },
               { "data": "jobid" },
               { "data": "client" },
               { "data": "level" },
               { "data": "starttime" },
               { "data": "endtime" },
               { "data": "jobbytes", "type": "file-size" }
            ],
            "paging": true,
            "pagingType": "full_numbers",
            "lengthMenu": [ <?php echo $_SESSION['bareos']['dt_lengthmenu']; ?> ],
            "pageLength": <?php echo $_SESSION['bareos']['dt_pagelength']; ?>,
            "stateSave": <?php echo $_SESSION['bareos']['dt_statesave']; ?>,
            "ordering": true,
            "info": true,
            "order": [[2, 'desc']],
            "columnDefs": [
               {
                  "targets": 0,
                  "render": function(data, type, full, meta) {
                     return '<a href="<?php echo $this->basePath() . '/job/index?jobname='; ?>'+data+'">'+data+'</a>';
                  }
               },
               {
                  "targets": 1,
                  "render": function(data, type, full, meta) {
                     return formatJobStatus(data);
                  }
               },
               {
                  "targets": 2,
                  "render": function(data, type, full, meta) {
                     return '<a href="<?php echo $this->basePath() . '/job/details/'; ?>'+data+'">'+data+'</a>';
                  }
               },
               {
                  "targets": 3,
                  "render": function(data, type, full, meta) {
                     return '<a href="<?php echo $this->basePath() . '/client/details/'; ?>'+data+'">'+data+'</a>';
                  }
               },
               {
                  "targets": 4,
                  "render": function(data, type, full, meta) {
                     return formatJobLevel(data);
                  }
               },
               {
                  "targets": 7,
                  "render": function(data, type, full, meta) {
                     return formatBytes(data);
                  }
               }
            ]
         });
      }
   );

</script>

<?php endif; ?>
